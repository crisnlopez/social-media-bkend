// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/crisnlopez/social-media-bkend/internal/user/gateway (interfaces: UserGateway)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	user "github.com/crisnlopez/social-media-bkend/internal/user/models"
	gomock "github.com/golang/mock/gomock"
)

// MockUserGateway is a mock of UserGateway interface.
type MockUserGateway struct {
	ctrl     *gomock.Controller
	recorder *MockUserGatewayMockRecorder
}

// MockUserGatewayMockRecorder is the mock recorder for MockUserGateway.
type MockUserGatewayMockRecorder struct {
	mock *MockUserGateway
}

// NewMockUserGateway creates a new mock instance.
func NewMockUserGateway(ctrl *gomock.Controller) *MockUserGateway {
	mock := &MockUserGateway{ctrl: ctrl}
	mock.recorder = &MockUserGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserGateway) EXPECT() *MockUserGatewayMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockUserGateway) CreateUser(arg0 *user.UserRequest) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserGatewayMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserGateway)(nil).CreateUser), arg0)
}

// DeleteUser mocks base method.
func (m *MockUserGateway) DeleteUser(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUser indicates an expected call of DeleteUser.
func (mr *MockUserGatewayMockRecorder) DeleteUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockUserGateway)(nil).DeleteUser), arg0)
}

// GetUser mocks base method.
func (m *MockUserGateway) GetUser(arg0 int64) (*user.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0)
	ret0, _ := ret[0].(*user.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockUserGatewayMockRecorder) GetUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUserGateway)(nil).GetUser), arg0)
}

// GetUserEmail mocks base method.
func (m *MockUserGateway) GetUserEmail(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserEmail", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserEmail indicates an expected call of GetUserEmail.
func (mr *MockUserGatewayMockRecorder) GetUserEmail(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserEmail", reflect.TypeOf((*MockUserGateway)(nil).GetUserEmail), arg0)
}

// UpdateUser mocks base method.
func (m *MockUserGateway) UpdateUser(arg0 *user.UserRequest, arg1 int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUser", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateUser indicates an expected call of UpdateUser.
func (mr *MockUserGatewayMockRecorder) UpdateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUser", reflect.TypeOf((*MockUserGateway)(nil).UpdateUser), arg0, arg1)
}
